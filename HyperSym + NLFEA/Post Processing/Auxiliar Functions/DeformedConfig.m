% DeformedConfig ----------------------------------------------------------
% Article: Fontes, V.O., Leit√£o, A.X., & Pereira, A. (2025). 
%          HyperSym: an educational MATLAB code for hyperelasticity
%          Computer Applications in Engineering Education
%          DOI: 10.1002/cae.70037
% -------------------------------------------------------------------------
function DeformedConfig(DIR,IntName,XYZ,BdBox,MID,p,State)
% Deformed configuration.

switch State
    case('2D')
        BaseNodes = find(abs(XYZ(:,3) - BdBox(5)) < eps);
        BaseLeftNodes = BaseNodes(abs(XYZ(BaseNodes,1) - BdBox(1)) < eps);
        BaseRightNodes = BaseNodes(abs(XYZ(BaseNodes,1) - BdBox(2)) < eps);
        BaseBotNodes = BaseNodes(abs(XYZ(BaseNodes,2) - BdBox(3)) < eps);
        BaseTopNodes = BaseNodes(abs(XYZ(BaseNodes,2) - BdBox(4)) < eps);
        
        Base = [BaseLeftNodes;BaseTopNodes;flip(BaseRightNodes);flip(BaseBotNodes)];
        
        figure; hold all; box off; axis equal; axis tight
        
        % Deformed Configuration
        for m = 1:length(MID)
            load(DIR{m},'DISP')
            
            x = XYZ + DISP(:,:,end);
            
            plot(x(Base,1),x(Base,2),...
                'LineStyle','-',...
                'LineWidth',1,...
                'Marker',p.Marker{m},...
                'MarkerSize',6,...
                'Color',p.Color{m});
        end
        
        % Undeformed Configuration
        plot(XYZ(Base,1),XYZ(Base,2),...
            'LineStyle','--',...
            'LineWidth',1,...
            'Marker','none',...
            'MarkerSize',6,...
            'Color','k');
        
        xlabel('$x_1$'); ylabel('$x_2$','Rotation',0);
        legend(MID,'Location','northoutside','NumColumns',4,'Orientation','horizontal')
        
        annotation(gcf,'textarrow',[0.44 0.39],[0.38 0.38],...
            'String',{'Undeformed Configuration'},...
            'Color',[0 0 0],...
            'FontSize',10,...
            'HorizontalAlignment','center',...
            'VerticalAlignment','middle',...
            'LineWidth',1,...
            'Interpreter','latex',...
            'HeadStyle','plain',...
            'HeadWidth',6,...
            'HeadLength',7);
    case('3D')
        BaseNodes = find(abs(XYZ(:,3) - BdBox(5)) < eps);
        BaseLeftNodes = BaseNodes(abs(XYZ(BaseNodes,1) - BdBox(1)) < eps);
        BaseRightNodes = BaseNodes(abs(XYZ(BaseNodes,1) - BdBox(2)) < eps);
        BaseBotNodes = BaseNodes(abs(XYZ(BaseNodes,2) - BdBox(3)) < eps);
        BaseTopNodes = BaseNodes(abs(XYZ(BaseNodes,2) - BdBox(4)) < eps);
        
        Base = [BaseLeftNodes;BaseTopNodes;flip(BaseRightNodes);flip(BaseBotNodes)];
        
        TopNodes = find(abs(XYZ(:,3) - BdBox(6)) < eps);
        TopLeftNodes = TopNodes(abs(XYZ(TopNodes,1) - BdBox(1)) < eps);
        TopRightNodes = TopNodes(abs(XYZ(TopNodes,1) - BdBox(2)) < eps);
        TopBotNodes = TopNodes(abs(XYZ(TopNodes,2) - BdBox(3)) < eps);
        TopTopNodes = TopNodes(abs(XYZ(TopNodes,2) - BdBox(4)) < eps);
        
        Top = [TopLeftNodes; TopTopNodes;flip(TopRightNodes);flip(TopBotNodes)];
        
        BaseCorners = [BaseLeftNodes(1);BaseTopNodes(1);BaseRightNodes(end);BaseBotNodes(end)];
        TopCorners = [TopLeftNodes(1);TopTopNodes(1);TopRightNodes(end);TopBotNodes(end)];
        Corners = [BaseCorners TopCorners];
        
        figure; hold all; box on; view(45,40)
        
        % Deformed Configuration
        [hb,ht] = deal(zeros(length(MID),1));
        
        for m = 1:length(MID)
            load(DIR{m},'DISP');
            
            x = XYZ + DISP(:,:,end);
            
            hb(m) = plot3(x(Base,1),x(Base,2),x(Base,3),...
                'LineStyle','-',...
                'LineWidth',1,...
                'Marker',p.Marker{m},...
                'MarkerSize',6,...
                'Color',p.Color{m},...
                'DisplayName',MID{m});
            ht(m) = plot3(x(Top,1),x(Top,2),x(Top,3),...
                'LineStyle','-',...
                'LineWidth',1,...
                'Marker',p.Marker{m},...
                'MarkerSize',6,...
                'Color',p.Color{m});
            
            % Corners
            for c = 1:4
                plot3(x(Corners(c,:),1),x(Corners(c,:),2),x(Corners(c,:),3),...
                    'LineStyle','-',...
                    'LineWidth',1,...
                    'Marker',p.Marker{m},...
                    'MarkerSize',6,...
                    'Color',p.Color{m});
            end
        end
        
        % Undeformed Configuration
        plot3(XYZ(Base,1),XYZ(Base,2),XYZ(Base,3),...
            'LineStyle','--',...
            'LineWidth',1,...
            'Marker','none',...
            'MarkerSize',6,...
            'Color','k');
        plot3(XYZ(Top,1),XYZ(Top,2),XYZ(Top,3),...
            'LineStyle','--',...
            'LineWidth',1,...
            'Marker','none',...
            'MarkerSize',6,...
            'Color','k');
        
        % Corners
        for c = 1:4
            plot3(XYZ(Corners(c,:),1),XYZ(Corners(c,:),2),XYZ(Corners(c,:),3),...
                'LineStyle','--',...
                'LineWidth',1,...
                'Marker','none',...
                'MarkerSize',6,...
                'Color','k');
        end
                
        xlabel('$x_1$'); ylabel('$x_2$'); zlabel('$x_3$','Rotation',0);
        legend(hb,MID,'Location','northoutside','NumColumns',4,'Orientation','horizontal')
        
        annotation(gcf,'textarrow',[0.71 0.65],[0.55 0.55],...
            'String',{'Undeformed','Configuration'},...
            'Color',[0 0 0],...
            'FontSize',10,...
            'HorizontalAlignment','center',...
            'VerticalAlignment','middle',...
            'LineWidth',1,...
            'Interpreter','latex',...
            'HeadStyle','plain',...
            'HeadWidth',6,...
            'HeadLength',7);
end

% Save plot(s)
GraphName = 'Deformed_Configuration';
subfolder = '/Output/Strip Models/.fig Files/';
SaveFIG(gcf,[GraphName sprintf('_%s_%s',State,IntName)],subfolder,'.fig')
end