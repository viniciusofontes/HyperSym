! Thick_Walled_Cylinder_CART -----------------------------------------------
! Article: Fontes, V.O., Leit√£o, A.X., & Pereira, A. (2023). 
!          HyperSym: a Matlab code for symbolic differentiation of 
!          ready-to-use tensors in hyperelastic finite element analysis, 
!          Computer Applications in Engineering Education.
!          DOI: https://doi.org/xx.xxxx/xxxxxx-xxx-xxxx-x
!
! References:
! [1] Kim, N.-H. (2014). Introduction to Nonlinear Finite Element Analysis.
!     Springer Science & Business Media, pp. 214-216.
! [2] ANSYS, Inc. (2021). Ansys Mechanical APDL Verification Manual, 
!     pp. 157-158. Example VM56: Hyperelastic Thick Cylinder Under Internal
!     Pressure.
! [3] Oden, J.T. (1972). Finite Elements of Nonlinear Continua, Courier 
!     Corporation, pp. 325-331.
! -------------------------------------------------------------------------

FINISH
/CLEAR
/TITLE, Thick-Walled Cylinder under Internal Pressure

/VIEW,1,0,-0.8,0.6
/REP,FAST   
/REPLOT,RESIZE  
/PLOPTS,DATE,OFF   ! removes the time and date in the upper right corner

! Changing background colors:
/RGB,INDEX,100,100,100,0
/RGB,INDEX,80,80,80,13
/RGB,INDEX,60,60,60,14
/RGB,INDEX,0,0,0,15

!-----------------------------------------------------------------------------------
! PREPROCESSING
!-----------------------------------------------------------------------------------

/PREP7
/TRIAD,ON          ! enables visualization of global coordinate system

! Initial Parameters:
pol2mm = 25.4
ri = 7*pol2mm      ! inner radious (mm)
ro = 18.625*pol2mm ! outer radious (mm)
h = 0.775*pol2mm   ! "height" (mm)

Nex = 20           ! number of elements in radial direction
Ney = 20           ! number of elements in tangential direction
Nez = 1            ! number of elements in axial direction

psi2MPa = 6.8945757293E-3
p = 150*psi2MPa    ! pressure (MPa)

pi = acos(-1)
alpha = pi/4

! Define Material Model:
!MatModel = 0      ! = Linear
!MatModel = 1      ! = Mooney-Rivlin
!MatModel = 2      ! = Yeoh
!MatModel = 3      ! = Neo-Hookean

*ASK,MatModel,'THE MATERIAL MODEL: ',1 

! Material Selection:
*IF,MatModel,EQ,0,THEN
	MatModel = 'Linear'
*ELSEIF,MatModel,EQ,1,THEN
	MatModel = 'Mooney-Rivlin'
*ELSEIF,MatModel,EQ,2,THEN
	MatModel = 'Yeoh'
*ELSEIF,MatModel,EQ,3,THEN
	MatModel = 'Neo-Hookean'
*ENDIF

/INPUT,MatModel,'txt',../Input/Materials

! Element:
ET,1,SOLID185
KEYOPT,1,2,0       ! full integration

! Area and Volume
CYL4,0,0,ri,90,ro,,h

! Selecting lines for the mesh *****************************************************
! Front and back line(s)
ASEL,S,LOC,Z,0
ASEL,A,LOC,Z,h
LSLA,S             ! selects those lines contained in the selected areas
CM,Frontal_Back_Lines,LINE    ! creates a group with a specific entity

! Vertical line(s)
CMSEL,S,Frontal_Back_Lines
LSEL,R,LOC,X,0
CM,VertLine,LINE

! Horizontal line(s)
CMSEL,S,Frontal_Back_Lines
LSEL,R,LOC,Y,0
CM,HorLine,LINE

! Both, horizontal and vertical, line(s) together
CMSEL,S,VertLine
CMSEL,A,HorLine
LESIZE,ALL,,,Nex,,1     ! defines "refinement" in a specific line

! Radial Lines
CMSEL,S,Frontal_Back_Lines
LSEL,U,LOC,X,0
LSEL,U,LOC,Y,0
LSEL,U,LOC,Y,h
LESIZE,ALL,,,Ney,,1

! Lines in the depth
CMSEL,S,Frontal_Back_Lines
LSEL,INVE
LESIZE,ALL,,,Nez,,1

! Mesh creation:
MSHAPE,0,3D        ! specifies the element shape to be used for meshing
MSHKEY,1           ! specifies whether use free or mapped mesh (1 = mapped)
VSEL,,,,ALL
VMESH,ALL          ! meshes all the volumes

!-----------------------------------------------------------------------------------
! SOLUCTION
!-----------------------------------------------------------------------------------

/SOLU

! Boundary Conditions:
! Prescribed displacements
ALLSEL
D,ALL,UZ,0
NSEL,S,LOC,Y,0
D,ALL,UY,0
NSEL,S,LOC,X,0
D,ALL,UX,0

! Applied pressure
ASEL,S,,,4
NSLA,S,1
SFA,ALL,,PRES,p  ! internal pressure

CM,PresNode,NODE

ALLSEL

ANTYPE,STATIC           ! static analysis
NLGEOM,ON               ! sets nonlinear displacements
NSUBST,10,100,10,OFF    ! defines the number of substeps
OUTRES,ALL,ALL          ! controls the solution data written to the database
OUTPR,BASIC,ALL         ! reads the load case file
/OUTPUT,,'inp'          ! redirects text output to a file or to the screen
LSWRITE                 ! writes load step file: Jobname.S01

SOLVE
 
!-----------------------------------------------------------------------------------
! POSTPROCESSING
!-----------------------------------------------------------------------------------

NN1 = Node(ri*cos(alpha),ri*sin(alpha),0)
NN2 = Node(ri*cos(alpha),ri*sin(alpha),h)
NN = 2

ERESX,YES               ! specifies extrapolation of integration point results

/INPUT,'GetResults','txt',../Input/PostProc
/INPUT,'GetPathResults_CART','txt',../Input/PostProc
/INPUT,'GetDisplacements','txt',../Input/PostProc
/INPUT,'GetReactionForces','txt',../Input/PostProc

PRITER                  ! prints solution summary data

/AUTO,1
/REPLOT,FAST