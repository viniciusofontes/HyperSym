! Strip -------------------------------------------------------------------
! Article: Fontes, V.O., Leit√£o, A.X., & Pereira, A. (2023). 
!          HyperSym: a Matlab code for symbolic differentiation of 
!          ready-to-use tensors in hyperelastic finite element analysis, 
!          Computer Applications in Engineering Education.
!          DOI: https://doi.org/xx.xxxx/xxxxxx-xxx-xxxx-x
!
! References:
! [1] Kim, N.-H. (2014). Introduction to Nonlinear Finite Element analysis.
!     Springer Science & Business Media, pp. 214-216.
! [2] Oden, J.T. (1972). Finite Elements of Nonlinear Continua, Courier 
!     Corporation, pp. 304-308.
! -------------------------------------------------------------------------

FINISH
/CLEAR
/TITLE, Nearly Incompressible Strip
/VIEW,1,0,0,0,1
/REPLOT,FAST   
/REPLOT,RESIZE  
/PLOPTS,DATE,OFF   ! removes the time and date in the upper right corner

! Changing background colors:
/RGB,INDEX,100,100,100,0
/RGB,INDEX,80,80,80,13
/RGB,INDEX,60,60,60,14
/RGB,INDEX,0,0,0,15

!-----------------------------------------------------------------------------------
! PREPROCESSING
!-----------------------------------------------------------------------------------

/PREP7
/TRIAD,ON          ! enables visualization of global coordinate system

! Initial Parameters:
pol2mm = 25.4
psi2MPa = 6.8945757293E-3

L = 8*pol2mm       ! length (mm)
t = 0.05*pol2mm    ! thickness (mm)
Net = 1            ! number of elements in the thickness
NumberMesh = 5     ! number of meshes to be avaliated

stretch = 3
Disp = L*(stretch - 1)/2  ! applied displacement

! Element:
ET,1,SOLID185
KEYOPT,1,2,0
!ETCONTROL,SUGGESTIONS,ON     ! controls element technologies used

! Define Material Model:
!MatModel = 0      ! = Linear
!MatModel = 1      ! = Mooney-Rivlin
!MatModel = 2      ! = Neo-Hookean

*ASK,MatModel,'THE MATERIAL MODEL: ',1

! Material Selection:
*IF,MatModel,EQ,0,THEN
	MatModel = 'Linear'
*ELSEIF,MatModel,EQ,1,THEN
	MatModel = 'Mooney-Rivlin'
*ELSEIF,MatModel,EQ,2,THEN
	MatModel = 'Neo-Hookean'
*ENDIF

! Material Properties:
/INPUT,MatModel,'txt',../Input/Materials

! Area and Volume:
BLC4,0,0,L/2,L/2        ! creates a rectangular area (area 1)
VOFFST,1,t

*DO,m,1,NumberMesh,1
	/PREP7
	Ne = 4*2**(m-1)     ! number of elements
	
	ALLSEL
	DDELE,ALL           ! deletes all dofs
	FDELE,ALL           ! deletes all forces
	VSEL,ALL            ! selects all volumes
	VCLEAR,1            ! deletes nodes and volume elements associated certain volume
	
	! Mesh creation:
	LSEL,S,LOC,Z,0
	LSEL,A,LOC,Z,t
	LESIZE,ALL,,,Ne,,1  ! defines "refinement" in a specific line
	
	LSEL,S,LOC,Y,0
	LSEL,A,LOC,Y,L/2
	CM,VLtmp,LINE
	LSEL,R,LOC,X,0
	CM,LVL,LINE
	
	CMSEL,S,VLtmp
	LSEL,R,LOC,X,L/2
	CM,RVL,LINE
	CMGROUP,VL,LVL,RVL
	CMSEL,S,VL
	LESIZE,ALL,,,Net,,1
	
	MSHAPE,0,3D         ! specifies the element shape to be used for meshing
	MSHKEY,1            ! specifies whether use free or mapped mesh (1 = mapped)
	VSEL,,,,ALL 
	VMESH,ALL           ! meshes all the areas

	!------------------------------------------------------------------------------------
	! SOLUCTION
	!------------------------------------------------------------------------------------

	/SOLU

	! Boundary Conditions:
	! Prescribed displacements
	NSEL,S,LOC,X,0      ! node selection
	D,ALL,UX,0
	NSEL,S,LOC,X,L/2
	D,ALL,UX,Disp
	D,ALL,UY,0
	NSEL,S,LOC,Y,0
	D,ALL,UY,0
	NSEL,S,LOC,Z,0      ! to simulate plane stress case
	D,ALL,UZ,0 

	ALLSEL

	ANTYPE,STATIC            ! static analysis
	NLGEOM,ON                ! sets nonlinear displacements
	
	*IF,m,GE,NumberMesh,THEN
		NSUBST,20,100,20,OFF
	*ELSE
		NSUBST,10,100,10,OFF
	*ENDIF
		
	OUTRES,ALL,ALL           ! controls the solution data written to the database
	OUTPR,BASIC,ALL          ! reads the load case file
	/OUTPUT,,'inp'           ! redirects text output to a file or to the screen
	LSWRITE                  ! writes load step file: Jobname.S01

	SOLVE

	!------------------------------------------------------------------------------------
	! POSTPROCESSING
	!------------------------------------------------------------------------------------

	NN1 = Node(0,L/2,0)
	NN2 = Node(L/2,L/2,0)
	NN3 = Node(0,L/2,t)
	NN4 = Node(L/2,L/2,t)
	NN = 4
	
	ERESX,DEFA               ! specifies extrapolation of integration point results
	
	/INPUT,'GetResults','txt',../Input/PostProc

	/AUTO,1
	/REPLOT,FAST
*ENDDO

/INPUT,'GetPathResults','txt',../Input/PostProc
PRITER                       ! prints solution summary data